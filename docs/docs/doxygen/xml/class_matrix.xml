<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="class_matrix" kind="class" language="C++" prot="public">
    <compoundname>Matrix</compoundname>
    <basecompoundref refid="class_base_matrix" prot="public" virt="non-virtual">BaseMatrix&lt; T &gt;</basecompoundref>
    <includes refid="matrix_8hpp" local="no">matrix.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="private-type">
      <memberdef kind="typedef" id="class_matrix_1af36a30e750b07e40eaa7329e705140f7" prot="private" static="no">
        <type><ref refid="class_base_matrix" kindref="compound">BaseMatrix</ref>&lt; T &gt;</type>
        <definition>using Matrix&lt; T &gt;::Parent =  BaseMatrix&lt;T&gt;</definition>
        <argsstring></argsstring>
        <name>Parent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="12" column="3" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" bodystart="12" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_matrix_1a8f3dfbe2a101bdc58c768d315dbc1234" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix&lt; T &gt;::Matrix</definition>
        <argsstring>()=default</argsstring>
        <name>Matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="18" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a2cd3764b5299adb5769b150c89e5ded6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>Matrix&lt; T &gt;::Matrix</definition>
        <argsstring>(UInt rows, UInt cols)</argsstring>
        <name>Matrix</name>
        <param>
          <type><ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref></type>
          <declname>rows</declname>
        </param>
        <param>
          <type><ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref></type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="20" column="3" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" bodystart="20" bodyend="22"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1aad1e22cc8c4b843d2f7f20b01c5cd543" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Matrix&lt; T &gt;::~Matrix</definition>
        <argsstring>()=default</argsstring>
        <name>~Matrix</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="24" column="3"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a9519dde17400b4c6b69454cfa6c867e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Matrix&lt; T &gt;::resize</definition>
        <argsstring>(UInt rows, UInt cols)</argsstring>
        <name>resize</name>
        <reimplements refid="class_base_matrix_1a6f151cc78a826656e8b839499f08d53b">resize</reimplements>
        <param>
          <type><ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref></type>
          <declname>rows</declname>
        </param>
        <param>
          <type><ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref></type>
          <declname>cols</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="32" column="8" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" bodystart="32" bodyend="39"/>
        <referencedby refid="class_disp_element_1a5a63901c8fa54d3268cc154eafbc2e96" compoundref="dispelement_8cpp" startline="28" endline="72">DispElement::DispElement</referencedby>
        <referencedby refid="class_matrix_1ac4817fa7c78a6d8cfed0f63e07e577fd" compoundref="matrix_8cpp" startline="37" endline="71">Matrix&lt; double &gt;::inverse</referencedby>
        <referencedby refid="class_matrix_1a2cd3764b5299adb5769b150c89e5ded6" compoundref="matrix_8hpp" startline="20" endline="22">Matrix&lt; double &gt;::Matrix</referencedby>
        <referencedby refid="class_phase_element_1aca7eeaff804f204101b6d8c34785820c" compoundref="phaseelement_8cpp" startline="28" endline="62">PhaseElement::PhaseElement</referencedby>
        <referencedby refid="class_matrix_1a744c7cb15d91bfd47f74e79d91c46c81" compoundref="matrix_8cpp" startline="75" endline="83">Matrix&lt; double &gt;::transpose</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a00376cb5c0c609b03bc73bec2e3e2001" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>T &amp;</type>
        <definition>T&amp; Matrix&lt; T &gt;::operator()</definition>
        <argsstring>(UInt i, UInt j)</argsstring>
        <name>operator()</name>
        <reimplements refid="class_base_matrix_1ae91400b38c33236ce6eda079d6604935">operator()</reimplements>
        <param>
          <type><ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="43" column="5" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" bodystart="43" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1aa8510298a5f45ce292d9490c02315f51" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>T</type>
        <definition>T Matrix&lt; T &gt;::operator()</definition>
        <argsstring>(UInt i, UInt j) const</argsstring>
        <name>operator()</name>
        <reimplements refid="class_base_matrix_1a012fdbc9db6e1ba360bbbfc4aff27956">operator()</reimplements>
        <param>
          <type><ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref></type>
          <declname>i</declname>
        </param>
        <param>
          <type><ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref></type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="46" column="5" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" bodystart="46" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1aacb55bf5245429976d221ca6bcae236b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt;T&gt;&amp; Matrix&lt; T &gt;::operator/=</definition>
        <argsstring>(const T &amp;c)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const T &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="51" column="10" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a0d38ebbff03482a0949efd248610ed1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt;T&gt;&amp; Matrix&lt; T &gt;::operator*=</definition>
        <argsstring>(const double &amp;c)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const double &amp;</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="57" column="10" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a3f1531e901641e3cc6cc015478cdef7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt;T&gt;&amp; Matrix&lt; T &gt;::operator+=</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;a)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="63" column="8" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" bodystart="63" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a7f27a17d4b88aab316991fb2b93dfecc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
        <definition>Matrix&lt;T&gt;&amp; Matrix&lt; T &gt;::operator=</definition>
        <argsstring>(T c)</argsstring>
        <name>operator=</name>
        <param>
          <type>T</type>
          <declname>c</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="69" column="10" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" bodystart="69" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1a744c7cb15d91bfd47f74e79d91c46c81" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix&lt; T &gt;::transpose</definition>
        <argsstring>(Matrix&lt; T &gt; &amp;)</argsstring>
        <name>transpose</name>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <defname>a</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="76" column="8" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.cpp" bodystart="75" bodyend="83"/>
        <referencedby refid="class_disp_element_1a5f72b4fd611a3e2f0d5cf0d490144846" compoundref="dispelement_8cpp" startline="74" endline="125">DispElement::GetStiffnessAndRes</referencedby>
        <referencedby refid="class_phase_element_1ad694ab007dde2e735bf30a95764fae41" compoundref="phaseelement_8cpp" startline="64" endline="100">PhaseElement::GetStiffnessAndRes</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1ac4817fa7c78a6d8cfed0f63e07e577fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void Matrix&lt; T &gt;::inverse</definition>
        <argsstring>(Matrix&lt; T &gt; &amp;)</argsstring>
        <name>inverse</name>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <defname>inv</defname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="79" column="8" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.cpp" bodystart="37" bodyend="71"/>
        <referencedby refid="class_disp_element_1a5f72b4fd611a3e2f0d5cf0d490144846" compoundref="dispelement_8cpp" startline="74" endline="125">DispElement::GetStiffnessAndRes</referencedby>
        <referencedby refid="class_phase_element_1ad694ab007dde2e735bf30a95764fae41" compoundref="phaseelement_8cpp" startline="64" endline="100">PhaseElement::GetStiffnessAndRes</referencedby>
        <referencedby refid="class_n_rsolver_1aac7fb5ccbd41916af1542820b41f5b7d" compoundref="newton__raphson__solver_8cpp" startline="3" endline="81">NRsolver::solve</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1aa0347b091217f8ea2a928efd860d4d26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>double</type>
        <definition>double Matrix&lt; T &gt;::determinant</definition>
        <argsstring>()</argsstring>
        <name>determinant</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="82" column="10" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.cpp" bodystart="5" bodyend="32"/>
        <referencedby refid="class_disp_element_1a5f72b4fd611a3e2f0d5cf0d490144846" compoundref="dispelement_8cpp" startline="74" endline="125">DispElement::GetStiffnessAndRes</referencedby>
        <referencedby refid="class_phase_element_1ad694ab007dde2e735bf30a95764fae41" compoundref="phaseelement_8cpp" startline="64" endline="100">PhaseElement::GetStiffnessAndRes</referencedby>
        <referencedby refid="class_matrix_1ac4817fa7c78a6d8cfed0f63e07e577fd" compoundref="matrix_8cpp" startline="37" endline="71">Matrix&lt; double &gt;::inverse</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_matrix_1abdbf63366368e14319e802f6cdaef612" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>void Matrix&lt; T &gt;::print</definition>
        <argsstring>(std::ostream &amp;stream) const</argsstring>
        <name>print</name>
        <reimplements refid="class_base_matrix_1ab89658706d0316fb693247bd5402b1d6">print</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>stream</declname>
        </param>
        <briefdescription>
<para>standard output stream operator </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="87" column="16" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix_inline.hpp" bodystart="85" bodyend="99"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>BaseMatrix&lt; T &gt;</label>
        <link refid="class_base_matrix"/>
      </node>
      <node id="1">
        <label>Matrix&lt; T &gt;</label>
        <link refid="class_matrix"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>BaseMatrix&lt; T &gt;</label>
        <link refid="class_base_matrix"/>
      </node>
      <node id="1">
        <label>Matrix&lt; T &gt;</label>
        <link refid="class_matrix"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" line="9" column="32" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp" bodystart="9" bodyend="89"/>
    <listofallmembers>
      <member refid="class_base_matrix_1abe8429f173629a08ff9fc51b727377f7" prot="public" virt="non-virtual"><scope>Matrix</scope><name>BaseMatrix</name></member>
      <member refid="class_base_matrix_1a0a3a03b552bffbcc54bc59b98b0a68a7" prot="public" virt="non-virtual"><scope>Matrix</scope><name>BaseMatrix</name></member>
      <member refid="class_base_matrix_1afac1191058cfe48321e9a27845b4f37a" prot="protected" virt="non-virtual"><scope>Matrix</scope><name>cols</name></member>
      <member refid="class_matrix_1aa0347b091217f8ea2a928efd860d4d26" prot="public" virt="non-virtual"><scope>Matrix</scope><name>determinant</name></member>
      <member refid="class_base_matrix_1a8086b801b8415faea96f0bfe0a4ac8ed" prot="public" virt="non-virtual"><scope>Matrix</scope><name>getStorage</name></member>
      <member refid="class_matrix_1ac4817fa7c78a6d8cfed0f63e07e577fd" prot="public" virt="non-virtual"><scope>Matrix</scope><name>inverse</name></member>
      <member refid="class_matrix_1a8f3dfbe2a101bdc58c768d315dbc1234" prot="public" virt="non-virtual"><scope>Matrix</scope><name>Matrix</name></member>
      <member refid="class_matrix_1a2cd3764b5299adb5769b150c89e5ded6" prot="public" virt="non-virtual"><scope>Matrix</scope><name>Matrix</name></member>
      <member refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" prot="public" virt="non-virtual"><scope>Matrix</scope><name>nbCols</name></member>
      <member refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" prot="public" virt="non-virtual"><scope>Matrix</scope><name>nbRows</name></member>
      <member refid="class_matrix_1a00376cb5c0c609b03bc73bec2e3e2001" prot="public" virt="virtual"><scope>Matrix</scope><name>operator()</name></member>
      <member refid="class_matrix_1aa8510298a5f45ce292d9490c02315f51" prot="public" virt="virtual"><scope>Matrix</scope><name>operator()</name></member>
      <member refid="class_matrix_1a0d38ebbff03482a0949efd248610ed1b" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator*=</name></member>
      <member refid="class_matrix_1a3f1531e901641e3cc6cc015478cdef7e" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator+=</name></member>
      <member refid="class_matrix_1aacb55bf5245429976d221ca6bcae236b" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator/=</name></member>
      <member refid="class_matrix_1a7f27a17d4b88aab316991fb2b93dfecc" prot="public" virt="non-virtual"><scope>Matrix</scope><name>operator=</name></member>
      <member refid="class_matrix_1af36a30e750b07e40eaa7329e705140f7" prot="private" virt="non-virtual"><scope>Matrix</scope><name>Parent</name></member>
      <member refid="class_matrix_1abdbf63366368e14319e802f6cdaef612" prot="public" virt="virtual"><scope>Matrix</scope><name>print</name></member>
      <member refid="class_matrix_1a9519dde17400b4c6b69454cfa6c867e7" prot="public" virt="virtual"><scope>Matrix</scope><name>resize</name></member>
      <member refid="class_base_matrix_1a59cee12a5ce9bde3751b23deddb84781" prot="protected" virt="non-virtual"><scope>Matrix</scope><name>rows</name></member>
      <member refid="class_base_matrix_1afbb3bec01cedf4ec17e94df3b910130c" prot="public" virt="non-virtual"><scope>Matrix</scope><name>size</name></member>
      <member refid="class_base_matrix_1ad5c0ac3cb40291f4d8de890218043d1a" prot="protected" virt="non-virtual"><scope>Matrix</scope><name>storage</name></member>
      <member refid="class_base_matrix_1ac3c957800f00d239ad2f78652e89f3d4" prot="public" virt="non-virtual"><scope>Matrix</scope><name>storageSize</name></member>
      <member refid="class_matrix_1a744c7cb15d91bfd47f74e79d91c46c81" prot="public" virt="non-virtual"><scope>Matrix</scope><name>transpose</name></member>
      <member refid="class_base_matrix_1a198301f1c76b6d7e1994a9300e2506f5" prot="public" virt="virtual"><scope>Matrix</scope><name>~BaseMatrix</name></member>
      <member refid="class_matrix_1aad1e22cc8c4b843d2f7f20b01c5cd543" prot="public" virt="non-virtual"><scope>Matrix</scope><name>~Matrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
