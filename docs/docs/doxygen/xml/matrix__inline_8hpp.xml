<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="matrix__inline_8hpp" kind="file" language="C++">
    <compoundname>matrix_inline.hpp</compoundname>
    <includes refid="matrix_8hpp" local="yes">matrix.hpp</includes>
    <includedby refid="matrix_8hpp" local="yes">/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp</includedby>
    <incdepgraph>
      <node id="10">
        <label>iomanip</label>
      </node>
      <node id="13">
        <label>vector.hpp</label>
        <link refid="vector_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix_inline.hpp</label>
        <link refid="matrix__inline_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>cmath</label>
      </node>
      <node id="7">
        <label>cassert</label>
      </node>
      <node id="9">
        <label>ostream</label>
      </node>
      <node id="12">
        <label>vector</label>
      </node>
      <node id="11">
        <label>base_matrix.hpp</label>
        <link refid="base__matrix_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="6">
        <label>algorithm</label>
      </node>
      <node id="3">
        <label>common.hpp</label>
        <link refid="common_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="7">
        <label>/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/model.cpp</label>
        <link refid="model_8cpp"/>
      </node>
      <node id="9">
        <label>/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/phaseelement.hpp</label>
        <link refid="phaseelement_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix_inline.hpp</label>
        <link refid="matrix__inline_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/phaseelement.cpp</label>
        <link refid="phaseelement_8cpp"/>
      </node>
      <node id="13">
        <label>/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/newton_raphson_solver.cpp</label>
        <link refid="newton__raphson__solver_8cpp"/>
      </node>
      <node id="5">
        <label>/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/dispelement.cpp</label>
        <link refid="dispelement_8cpp"/>
      </node>
      <node id="8">
        <label>/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/element.cpp</label>
        <link refid="element_8cpp"/>
      </node>
      <node id="2">
        <label>/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.hpp</label>
        <link refid="matrix_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="1" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/model.hpp</label>
        <link refid="model_8hpp"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/newton_raphson_solver.hpp</label>
        <link refid="newton__raphson__solver_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/dispelement.hpp</label>
        <link refid="dispelement_8hpp"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/element.hpp</label>
        <link refid="element_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix.cpp</label>
        <link refid="matrix_8cpp"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="matrix__inline_8hpp_1a6572630f7652d8e8e26621fd13e5a2a2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt;T&gt; operator*</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;a, const Matrix&lt; T &gt; &amp;b)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix_inline.hpp" line="6" column="15" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix_inline.hpp" bodystart="6" bodyend="20"/>
        <references refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" compoundref="base__matrix_8hpp" startline="73" endline="73">BaseMatrix&lt; T &gt;::nbCols</references>
        <references refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" compoundref="base__matrix_8hpp" startline="70" endline="70">BaseMatrix&lt; T &gt;::nbRows</references>
      </memberdef>
      <memberdef kind="function" id="matrix__inline_8hpp_1af5e300bb9e3466f2fa6adbbd975e5e39" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt;T&gt; operator*</definition>
        <argsstring>(const double &amp;c, const Matrix&lt; T &gt; &amp;a)</argsstring>
        <name>operator*</name>
        <param>
          <type>const double &amp;</type>
          <declname>c</declname>
        </param>
        <param>
          <type>const <ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix_inline.hpp" line="24" column="15" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix_inline.hpp" bodystart="24" bodyend="32"/>
        <references refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" compoundref="base__matrix_8hpp" startline="73" endline="73">BaseMatrix&lt; T &gt;::nbCols</references>
        <references refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" compoundref="base__matrix_8hpp" startline="70" endline="70">BaseMatrix&lt; T &gt;::nbRows</references>
      </memberdef>
      <memberdef kind="function" id="matrix__inline_8hpp_1ab8c2b966c01967c4d2806dae32eb3300" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt;T&gt; operator-</definition>
        <argsstring>(Matrix&lt; T &gt; &amp;a, Matrix&lt; T &gt; &amp;b)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix_inline.hpp" line="36" column="15" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix_inline.hpp" bodystart="36" bodyend="48"/>
        <references refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" compoundref="base__matrix_8hpp" startline="73" endline="73">BaseMatrix&lt; T &gt;::nbCols</references>
        <references refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" compoundref="base__matrix_8hpp" startline="70" endline="70">BaseMatrix&lt; T &gt;::nbRows</references>
      </memberdef>
      <memberdef kind="function" id="matrix__inline_8hpp_1a43ac3c1a6f9624cdb0f6dd577fa0e39f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt;</type>
        <definition>Matrix&lt;T&gt; operator+</definition>
        <argsstring>(const Matrix&lt; T &gt; &amp;a, const Matrix&lt; T &gt; &amp;b)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix_inline.hpp" line="53" column="15" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix_inline.hpp" bodystart="53" bodyend="64"/>
        <references refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" compoundref="base__matrix_8hpp" startline="73" endline="73">BaseMatrix&lt; T &gt;::nbCols</references>
        <references refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" compoundref="base__matrix_8hpp" startline="70" endline="70">BaseMatrix&lt; T &gt;::nbRows</references>
      </memberdef>
      <memberdef kind="function" id="matrix__inline_8hpp_1aad481cb58a7bc5cf418a831c22119e6d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt;T&gt; operator*</definition>
        <argsstring>(Matrix&lt; T &gt; &amp;a, std::vector&lt; T &gt; &amp;b)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="class_matrix" kindref="compound">Matrix</ref>&lt; T &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>std::vector&lt; T &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix_inline.hpp" line="69" column="20" bodyfile="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix_inline.hpp" bodystart="69" bodyend="81"/>
        <references refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" compoundref="base__matrix_8hpp" startline="73" endline="73">BaseMatrix&lt; T &gt;::nbCols</references>
        <references refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" compoundref="base__matrix_8hpp" startline="70" endline="70">BaseMatrix&lt; T &gt;::nbRows</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="matrix_8hpp" kindref="compound">matrix.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrix<sp/>matrix<sp/>multiplication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="6" refid="matrix__inline_8hpp_1a6572630f7652d8e8e26621fd13e5a2a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref><sp/><ref refid="matrix__inline_8hpp_1a6572630f7652d8e8e26621fd13e5a2a2" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref>&amp;<sp/>b){</highlight></codeline>
<codeline lineno="7"><highlight class="normal"><sp/><sp/>assert(b.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>()<sp/>==<sp/>a.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>());</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref><sp/>c(a.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>(),<sp/>b.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>());</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref><sp/>i=0;<sp/>i<sp/>&lt;<sp/>a.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>();<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>rows<sp/>of<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref><sp/>j=0;<sp/>j<sp/>&lt;<sp/>b.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>();<sp/>j++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>columns<sp/>of<sp/>b</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>a.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>();<sp/>k++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>columns<sp/>of<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>c(i,<sp/>j)<sp/>+=<sp/>a(i,<sp/>k)<sp/>*<sp/>b(k,<sp/>j);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="20"><highlight class="normal">}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">//<sp/>operator<sp/>multiplication<sp/>by<sp/>scalar</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="24" refid="matrix__inline_8hpp_1af5e300bb9e3466f2fa6adbbd975e5e39" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref><sp/><ref refid="matrix__inline_8hpp_1a6572630f7652d8e8e26621fd13e5a2a2" kindref="member">operator*</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">&amp;<sp/>c,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref><sp/>&amp;<sp/>a)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref><sp/>res(a.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>(),<sp/>a.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>());</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref><sp/>i=0;<sp/>i<sp/>&lt;<sp/>a.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>();<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>rows<sp/>of<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref><sp/>j=0;<sp/>j<sp/>&lt;<sp/>a.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>();<sp/>j++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>columns<sp/>of<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>res(i,<sp/>j)<sp/>=<sp/>c<sp/>*<sp/>a(i,<sp/>j);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrix<sp/>matrix<sp/>subtraction</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="36" refid="matrix__inline_8hpp_1ab8c2b966c01967c4d2806dae32eb3300" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref><sp/><ref refid="matrix__inline_8hpp_1ab8c2b966c01967c4d2806dae32eb3300" kindref="member">operator-</ref>(<ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref>&amp;<sp/>a,<sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref>&amp;<sp/>b){</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>assert(a.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>()<sp/>==<sp/>b.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>()<sp/>&amp;&amp;<sp/>a.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>()<sp/>==<sp/>b.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>());</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref><sp/>c(a.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>(),<sp/>a.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>());</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref><sp/>i=0;<sp/>i<sp/>&lt;<sp/>a.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>();<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>rows<sp/>of<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref><sp/>j=0;<sp/>j<sp/>&lt;<sp/>a.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>();<sp/>j++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>columns<sp/>of<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(i,<sp/>j)<sp/>=<sp/>a(i,<sp/>j)<sp/><sp/>-<sp/><sp/>b(i,<sp/>j);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrix<sp/>matrix<sp/>addition</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="53" refid="matrix__inline_8hpp_1a43ac3c1a6f9624cdb0f6dd577fa0e39f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref><sp/><ref refid="matrix__inline_8hpp_1a43ac3c1a6f9624cdb0f6dd577fa0e39f" kindref="member">operator+</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref>&amp;<sp/>a,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref>&amp;<sp/>b){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/>assert(a.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>()<sp/>==<sp/>b.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>()<sp/>&amp;&amp;<sp/>a.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>()<sp/>==<sp/>b.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>());</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref><sp/>c(a.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>(),<sp/>a.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>());</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref><sp/>i=0;<sp/>i<sp/>&lt;<sp/>a.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>();<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>rows<sp/>of<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref><sp/>j=0;<sp/>j<sp/>&lt;<sp/>a.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>();<sp/>j++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>columns<sp/>of<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c(i,<sp/>j)<sp/>=<sp/>a(i,<sp/>j)<sp/><sp/>+<sp/><sp/>b(i,<sp/>j);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="64"><highlight class="normal">}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="comment">//<sp/>matrix<sp/>vector<sp/>multiplication</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="69" refid="matrix__inline_8hpp_1aad481cb58a7bc5cf418a831c22119e6d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>std::vector&lt;T&gt;<sp/><ref refid="matrix__inline_8hpp_1a6572630f7652d8e8e26621fd13e5a2a2" kindref="member">operator*</ref>(<ref refid="class_matrix" kindref="compound">Matrix&lt;T&gt;</ref>&amp;<sp/>a,<sp/>std::vector&lt;T&gt;&amp;<sp/>b){</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/>assert(a.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>()<sp/>==<sp/>b.size());</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>std::vector&lt;T&gt;<sp/>c;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/>c.resize(a.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>());</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref><sp/>i=0;<sp/>i<sp/>&lt;<sp/>a.<ref refid="class_base_matrix_1ac036dca55e151b93b40766afdebc1b14" kindref="member">nbRows</ref>();<sp/>i++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>rows<sp/>of<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref><sp/>j=0;<sp/>j<sp/>&lt;<sp/>a.<ref refid="class_base_matrix_1a5e840b5b8195b01fea677c5d3a623ef2" kindref="member">nbCols</ref>();<sp/>j++)<sp/>{<sp/></highlight><highlight class="comment">//<sp/>columns<sp/>of<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>c[i]<sp/>+=<sp/>a(i,<sp/>j)<sp/><sp/>*<sp/><sp/>b[j];</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="85" refid="class_matrix_1abdbf63366368e14319e802f6cdaef612" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_matrix_1abdbf63366368e14319e802f6cdaef612" kindref="member">Matrix&lt;T&gt;::print</ref>(std::ostream&amp;<sp/>stream)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Solution:start</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>Parent::print(stream);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//Solution:end</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>print_precision<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>this-&gt;rows;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<ref refid="common_8hpp_1a9cc0620fb2e91b51587c6936060d4161" kindref="member">UInt</ref><sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>this-&gt;cols;<sp/>++j)<sp/>{</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((*</highlight><highlight class="keyword">this</highlight><highlight class="normal">)(i,<sp/>j)<sp/>&gt;=<sp/>0){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>std::fixed<sp/>&lt;&lt;<sp/>std::setprecision(print_precision)<sp/>&lt;&lt;<sp/>(*this)(i,<sp/>j)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>stream<sp/>&lt;&lt;<sp/>std::endl;;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/student/Project_TEHPC/project-tehpc-niels-pichler/src/matrix_inline.hpp"/>
  </compounddef>
</doxygen>
